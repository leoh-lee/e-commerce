version: '3'

networks:
  default:
    driver: bridge
  kafka-cluster:
    driver: bridge

services:
  mysql:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=application
      - MYSQL_PASSWORD=application
      - MYSQL_DATABASE=hhplus
    volumes:
      - ./data/mysql/:/var/lib/mysql
  zookeeper-0:
    image: bitnami/zookeeper:3.9.2
    container_name: zookeeper-0
    hostname: zookeeper-0
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - kafka-cluster
    volumes:
      - zookeeper_data:/bitnami/zookeeper

  kafka-1:
    container_name: kafka-1
    hostname: kafka1
    image: bitnami/kafka:3.7.0
    ports:
      - 10002:9094
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ENABLE_KRAFT: no
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper-0:2181
      KAFKA_CFG_LISTENERS: CLIENT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka-1:9092,EXTERNAL://localhost:10002
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - kafka-cluster
    volumes:
      - kafka1_data:/bitnami/kafka

  kafka-2:
    container_name: kafka-2
    hostname: kafka2
    image: bitnami/kafka:3.7.0
    ports:
      - 10003:9094
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ENABLE_KRAFT: no
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper-0:2181
      KAFKA_CFG_LISTENERS: CLIENT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka-2:9092,EXTERNAL://localhost:10003
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - kafka-cluster
    volumes:
      - kafka2_data:/bitnami/kafka

  kafka-3:
    image: bitnami/kafka:3.7.0
    hostname: kafka3
    container_name: kafka-3
    ports:
      - 10004:9094
    environment:
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ENABLE_KRAFT: no
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper-0:2181
      KAFKA_CFG_LISTENERS: CLIENT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka-3:9092,EXTERNAL://localhost:10004
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - kafka-cluster
    volumes:
      - kafka3_data:/bitnami/kafka

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    container_name: kafka-ui
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    ports:
      - 8888:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092
      DYNAMIC_CONFIG_ENABLED: true
    networks:
      - kafka-cluster

  redis:
    container_name: redis
    image: redis:6.2.6-alpine
    ports:
      - 6379:6379
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis_data:/data
      - redis_config:/usr/local/etc/redis/redis.conf
    restart: always

volumes:
  zookeeper_data:
  kafka1_data:
  kafka2_data:
  kafka3_data:
  redis_data:
  redis_config: